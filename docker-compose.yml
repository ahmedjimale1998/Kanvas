version: '3.1'

services:
    #USERSERVICE
    userservice:
        hostname: userservice
        container_name: userservice
        depends_on:
            - "user_db"
        build:
            dockerfile: ./UserService.Dockerfile
        ports:
            - "4001:4001"
        environment:
            - ASPNETCORE_URLS=http://+:4001
            - ConnectionStrings:MyConnectionString=Server=host.docker.internal;Port=5432;Database=postgres;User Id=postgres;Password=password;
            - ASPNETCORE_ENVIRONMENT=Development
        network_mode: host


    user_db:
       hostname: user_db
       image: postgres
       restart: always
       environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
       ports:
            - 5432:5432
       expose:
            - "5432:5432"
       volumes: 
        - user_db:/var/lib/postgresql/data

    #MAILSERVICE
    mailservice:
        hostname: mailservice
        container_name: mailservice
        depends_on:
            - "mail_db"
        build:
            dockerfile: ./MailService.Dockerfile
        ports:
            - "4002:4002"
        environment:
            - ASPNETCORE_URLS=http://+:4002
            - ConnectionStrings:MyConnectionString=Server=host.docker.internal;Port=5433;Database=postgres;User Id=postgres;Password=mailservice;
            - ASPNETCORE_ENVIRONMENT=Development
        network_mode: host


    mail_db:
       hostname: mail_db
       image: postgres
       restart: always
       environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: mailservice
       ports:
            - 5433:5432
       expose:
            - "5433:5432"
       volumes: 
        - mail_db:/var/lib/postgresql/data

    # GATEWAY
    gateway:
        container_name: gateway
        build: 
           dockerfile: ./Gateway.Dockerfile
        #    context: ./Gateway/ApiGateway
        ports: 
            - "4003:4003"
        # links:
        #     - userservice
        #     - mailservice
        # depends_on:
        #     - "userservice"
        #     - "mailservice"
        environment:
            - ASPNETCORE_URLS=http://+:4003
            - ASPNETCORE_ENVIRONMENT=Development
        network_mode: host
    
    #ANNOUNCEMENTUSERVICE
    announcementservice:
        hostname: announcementservice
        container_name: announcementservice
        depends_on:
            - "announcement_db"
        build:
            dockerfile: ./AnnouncementService.Dockerfile
        ports:
            - "4004:4004"
        environment:
            - ASPNETCORE_URLS=http://+:4004
            - ConnectionStrings:MyConnectionString=Server=host.docker.internal;Port=5431;Database=postgres;User Id=postgres;Password=password;
        network_mode: host


    announcement_db:
       hostname: announcement_db
       image: postgres
       restart: always
       environment:
            POSTGRES_DB: postgres
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
       ports:
            - 5431:5432
       expose:
            - "5431:5432"
       volumes: 
        - announcement_db:/var/lib/postgresql/data

volumes:
    user_db:
        driver: local
    mail_db:
        driver: local
    announcement_db:
        driver: local

