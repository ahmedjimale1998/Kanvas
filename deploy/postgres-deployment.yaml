apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
       app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - configMapRef:
                name: postgres-config
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgredb
      volumes:
        - name: postgredb
          persistentVolumeClaim:
            claimName: postgres-pv-claim  
---
apiVersion: v1
kind: Service
metadata:
  name: maildb
spec:
  ports:
  - port: 5432
  selector:
    app: maildb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: maildb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: maildb
  template:
    metadata:
      labels:
        app: maildb
    spec:
      containers:
      - name: maildb
        image: postgres:14.1-alpine
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: mailservice
        ports:
        - containerPort: 5432
          name: maildb
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: announcementdb
spec:
  replicas: 1
  selector:
    matchLabels:
      app: announcementdb
  template:
    metadata:
      labels:
        app: announcementdb
    spec:
      containers:
      - name: announcementdb
        image: postgres:14.1-alpine
        env:
        - name: POSTGRES_USER
          value: postgres
        - name: POSTGRES_PASSWORD
          value: announcementservice
        ports:
        - containerPort: 5432
          name: announcementdb
---
apiVersion: v1
kind: Service
metadata:
  name: announcementdb
spec:
  ports:
  - port: 5432
  selector:
    app: announcementdb